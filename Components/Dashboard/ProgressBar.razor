@*
    Reusable progress bar component with animations and customizable styling
*@

<div class="progress-bar-container">
    @if (ShowLabel)
    {
        <div class="progress-label">
            <span class="progress-title">@Title</span>
            @if (ShowPercentage)
            {
                <span class="progress-percentage">@($"{Value:F0}%")</span>
            }
        </div>
    }
    
    <div class="progress @SizeClass @ThemeClass" style="height: @($"{Height}px")">
        <div class="progress-bar @GetProgressBarClass()" 
             role="progressbar" 
             style="width: @($"{Math.Min(Value, 100)}%")"
             aria-valuenow="@Value" 
             aria-valuemin="0" 
             aria-valuemax="100"
             title="@($"{Value:F1}% complete")">
            @if (ShowPercentage && !ShowLabel)
            {
                <span class="progress-text">@($"{Value:F0}%")</span>
            }
        </div>
    </div>
    
    @if (!string.IsNullOrEmpty(SubText))
    {
        <div class="progress-subtext">
            <small class="text-muted">@SubText</small>
        </div>
    }
</div>

@code {
    [Parameter] public decimal Value { get; set; } = 0;
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string SubText { get; set; } = string.Empty;
    [Parameter] public bool ShowPercentage { get; set; } = false;
    [Parameter] public bool ShowLabel { get; set; } = true;
    [Parameter] public bool Animated { get; set; } = true;
    [Parameter] public bool Striped { get; set; } = false;
    [Parameter] public ProgressTheme Theme { get; set; } = ProgressTheme.Auto;
    [Parameter] public ProgressSize Size { get; set; } = ProgressSize.Medium;
    [Parameter] public int Height { get; set; } = 0; // 0 means use default size
    
    private string SizeClass => Size switch
    {
        ProgressSize.Small => "progress-sm",
        ProgressSize.Large => "progress-lg",
        _ => ""
    };
    
    private string ThemeClass => Theme switch
    {
        ProgressTheme.Light => "progress-light",
        ProgressTheme.Dark => "progress-dark",
        _ => ""
    };
    
    private string GetProgressBarClass()
    {
        var classes = new List<string>();
        
        // Add theme-based color class
        if (Theme == ProgressTheme.Auto)
        {
            classes.Add(Value switch
            {
                < 25 => "bg-danger",
                < 50 => "bg-warning",
                < 75 => "bg-info",
                _ => "bg-success"
            });
        }
        else
        {
            classes.Add(Theme switch
            {
                ProgressTheme.Success => "bg-success",
                ProgressTheme.Warning => "bg-warning",
                ProgressTheme.Danger => "bg-danger",
                ProgressTheme.Info => "bg-info",
                ProgressTheme.Primary => "bg-primary",
                _ => "bg-primary"
            });
        }
        
        // Add animation classes
        if (Animated)
        {
            classes.Add("progress-bar-animated");
        }
        
        if (Striped)
        {
            classes.Add("progress-bar-striped");
        }
        
        return string.Join(" ", classes);
    }
}

<style>
    .progress-bar-container {
        width: 100%;
    }
    
    .progress-label {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }
    
    .progress-title {
        font-weight: 600;
        font-size: 0.875rem;
        color: #495057;
    }
    
    .progress-percentage {
        font-weight: 600;
        font-size: 0.875rem;
        color: #6c757d;
    }
    
    .progress {
        background-color: #e9ecef;
        border-radius: 0.375rem;
        overflow: hidden;
        box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
        height: 1rem;
    }
    
    .progress-sm {
        height: 0.5rem;
    }
    
    .progress-lg {
        height: 1.5rem;
    }
    
    .progress-light {
        background-color: rgba(255,255,255,0.2);
    }
    
    .progress-dark {
        background-color: rgba(0,0,0,0.2);
    }
    
    .progress-bar {
        display: flex;
        flex-direction: column;
        justify-content: center;
        overflow: hidden;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        transition: width 0.6s ease;
        font-size: 0.75rem;
        font-weight: 600;
        border-radius: inherit;
    }
    
    .progress-bar-animated {
        animation: progress-shimmer 2s linear infinite;
        background-image: linear-gradient(45deg, 
            rgba(255,255,255,0.15) 25%, 
            transparent 25%, 
            transparent 50%, 
            rgba(255,255,255,0.15) 50%, 
            rgba(255,255,255,0.15) 75%, 
            transparent 75%, 
            transparent);
        background-size: 1rem 1rem;
    }
    
    .progress-bar-striped {
        background-image: linear-gradient(45deg, 
            rgba(255,255,255,0.15) 25%, 
            transparent 25%, 
            transparent 50%, 
            rgba(255,255,255,0.15) 50%, 
            rgba(255,255,255,0.15) 75%, 
            transparent 75%, 
            transparent);
        background-size: 1rem 1rem;
    }
    
    .progress-text {
        font-size: inherit;
        line-height: 1;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
    }
    
    .progress-subtext {
        margin-top: 0.25rem;
    }
    
    @@keyframes progress-shimmer {
        0% { background-position: -1rem 0; }
        100% { background-position: 1rem 0; }
    }
    
    /* Enhanced color themes */
    .bg-success {
        background-color: #198754 !important;
        background-image: linear-gradient(135deg, #198754 0%, #20c997 100%);
    }
    
    .bg-info {
        background-color: #0dcaf0 !important;
        background-image: linear-gradient(135deg, #0dcaf0 0%, #3dd5f3 100%);
    }
    
    .bg-warning {
        background-color: #ffc107 !important;
        background-image: linear-gradient(135deg, #ffc107 0%, #ffcd39 100%);
        color: #000 !important;
        text-shadow: none;
    }
    
    .bg-danger {
        background-color: #dc3545 !important;
        background-image: linear-gradient(135deg, #dc3545 0%, #e35d6a 100%);
    }
    
    .bg-primary {
        background-color: #0d6efd !important;
        background-image: linear-gradient(135deg, #0d6efd 0%, #6610f2 100%);
    }
    
    /* Accessibility improvements */
    @@media (prefers-reduced-motion: reduce) {
        .progress-bar {
            transition: none;
        }
        
        .progress-bar-animated {
            animation: none;
        }
    }
    
    /* High contrast mode support */
    @@media (prefers-contrast: high) {
        .progress {
            border: 2px solid;
        }
        
        .progress-bar {
            background-image: none !important;
        }
    }
</style>

@code {
    public enum ProgressTheme
    {
        Auto,
        Primary,
        Success,
        Info,
        Warning,
        Danger,
        Light,
        Dark
    }
    
    public enum ProgressSize
    {
        Small,
        Medium,
        Large
    }
}