@*
    Real-time connection status indicator for mobile dashboard
*@

<div class="connection-status @GetStatusClass()">
    <div class="connection-indicator">
        <div class="status-dot @GetDotClass()"></div>
        @if (ShowLabel)
        {
            <span class="status-label">@GetStatusText()</span>
        }
    </div>
    
    @if (!IsConnected && ShowReconnectButton)
    {
        <button class="reconnect-btn" @onclick="OnReconnect" disabled="@IsReconnecting">
            @if (IsReconnecting)
            {
                <i class="bi bi-arrow-clockwise spin me-1"></i>
                <span>Reconnecting...</span>
            }
            else
            {
                <i class="bi bi-arrow-repeat me-1"></i>
                <span>Reconnect</span>
            }
        </button>
    }
</div>

@code {
    [Parameter] public bool IsConnected { get; set; } = true;
    [Parameter] public bool ShowLabel { get; set; } = false;
    [Parameter] public bool ShowReconnectButton { get; set; } = true;
    [Parameter] public EventCallback OnReconnect { get; set; }
    
    private bool IsReconnecting = false;
    
    private string GetStatusClass()
    {
        return IsConnected ? "status-connected" : "status-disconnected";
    }
    
    private string GetDotClass()
    {
        if (IsReconnecting) return "dot-connecting";
        return IsConnected ? "dot-connected" : "dot-disconnected";
    }
    
    private string GetStatusText()
    {
        if (IsReconnecting) return "Reconnecting...";
        return IsConnected ? "Connected" : "Offline";
    }
    
    private async Task HandleReconnect()
    {
        IsReconnecting = true;
        StateHasChanged();
        
        try
        {
            await OnReconnect.InvokeAsync();
            await Task.Delay(1000); // Show reconnecting state
        }
        finally
        {
            IsReconnecting = false;
            StateHasChanged();
        }
    }
}

<style>
    .connection-status {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
    }

    .connection-indicator {
        display: flex;
        align-items: center;
        gap: 0.375rem;
    }

    .status-dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        position: relative;
        transition: all 0.3s ease;
    }

    .dot-connected {
        background-color: #198754;
        box-shadow: 0 0 0 0 rgba(25, 135, 84, 0.7);
        animation: connected-pulse 2s infinite;
    }

    .dot-disconnected {
        background-color: #dc3545;
        animation: disconnected-flash 1s infinite;
    }

    .dot-connecting {
        background-color: #ffc107;
        animation: connecting-spin 1s linear infinite;
    }

    .status-label {
        color: inherit;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-connected .status-label {
        color: rgba(255, 255, 255, 0.9);
    }

    .status-disconnected .status-label {
        color: #dc3545;
    }

    .reconnect-btn {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-size: 0.8rem;
        cursor: pointer;
        transition: all 0.15s ease;
    }

    .reconnect-btn:hover:not(:disabled) {
        background: rgba(255, 255, 255, 0.3);
        border-color: rgba(255, 255, 255, 0.5);
    }

    .reconnect-btn:disabled {
        opacity: 0.7;
        cursor: not-allowed;
    }

    .spin {
        animation: spin 1s linear infinite;
    }

    /* Animations */
    @keyframes connected-pulse {
        0% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(25, 135, 84, 0.7);
        }
        
        70% {
            transform: scale(1);
            box-shadow: 0 0 0 6px rgba(25, 135, 84, 0);
        }
        
        100% {
            transform: scale(0.95);
            box-shadow: 0 0 0 0 rgba(25, 135, 84, 0);
        }
    }

    @keyframes disconnected-flash {
        0%, 50% {
            opacity: 1;
        }
        51%, 100% {
            opacity: 0.3;
        }
    }

    @keyframes connecting-spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

    /* Reduced motion */
    @media (prefers-reduced-motion: reduce) {
        .status-dot,
        .spin {
            animation: none !important;
        }

        .dot-connected {
            background-color: #198754;
            box-shadow: none;
        }

        .dot-disconnected {
            background-color: #dc3545;
            opacity: 1;
        }

        .dot-connecting {
            background-color: #ffc107;
        }
    }

    /* High contrast mode */
    @media (prefers-contrast: high) {
        .status-dot {
            border: 2px solid;
        }

        .dot-connected {
            border-color: #198754;
        }

        .dot-disconnected {
            border-color: #dc3545;
        }

        .dot-connecting {
            border-color: #ffc107;
        }

        .reconnect-btn {
            border: 2px solid;
        }
    }
</style>