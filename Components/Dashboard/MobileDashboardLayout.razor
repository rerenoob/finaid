@using finaid.Models.Dashboard
@using finaid.Models.User
@using finaid.Models.UI

@*
    Mobile-optimized dashboard layout component
*@

<div class="mobile-dashboard-layout">
    @if (DeviceInfo?.IsMobile == true)
    {
        <!-- Mobile Header -->
        <div class="mobile-header">
            <div class="mobile-welcome">
                <h2 class="mobile-title">Welcome, @(CurrentUser?.FirstName ?? "Student")!</h2>
                <div class="mobile-connection-status">
                    <RealTimeConnectionStatus IsConnected="@IsRealTimeConnected" />
                </div>
            </div>
            
            <div class="mobile-summary-stats">
                <div class="summary-stat">
                    <span class="stat-value">@GetOverallProgress()%</span>
                    <span class="stat-label">Progress</span>
                </div>
                <div class="summary-stat">
                    <span class="stat-value">@GetDaysUntilDeadline()</span>
                    <span class="stat-label">Days Left</span>
                </div>
                <div class="summary-stat">
                    <span class="stat-value">@GetPendingCount()</span>
                    <span class="stat-label">Pending</span>
                </div>
            </div>
        </div>

        <!-- Mobile Cards Container -->
        <div class="mobile-cards-container">
            <SwipeableCards @ref="swipeableCards" OnCardSwipe="OnCardSwipe">
                @* Progress Card *@
                <div class="mobile-card mobile-card-progress" data-card-id="progress">
                    <div class="mobile-card-header">
                        <h5>
                            <i class="bi bi-graph-up me-2"></i>
                            Application Progress
                        </h5>
                        <a href="/progress" class="card-action-link">
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                    <div class="mobile-card-body">
                        <MobileProgressView Applications="@DashboardData.Applications" />
                    </div>
                </div>

                @* Deadlines Card *@
                <div class="mobile-card mobile-card-deadlines" data-card-id="deadlines">
                    <div class="mobile-card-header">
                        <h5>
                            <i class="bi bi-calendar-event me-2"></i>
                            Upcoming Deadlines
                        </h5>
                        <a href="/deadlines" class="card-action-link">
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                    <div class="mobile-card-body">
                        <MobileDeadlineList Deadlines="@DashboardData.UpcomingDeadlines" MaxItems="3" />
                    </div>
                </div>

                @* Quick Actions Card *@
                <div class="mobile-card mobile-card-actions" data-card-id="actions">
                    <div class="mobile-card-header">
                        <h5>
                            <i class="bi bi-lightning me-2"></i>
                            Quick Actions
                        </h5>
                    </div>
                    <div class="mobile-card-body">
                        <MobileQuickActions Actions="@DashboardData.QuickActions.Actions" />
                    </div>
                </div>

                @* Activity Card *@
                <div class="mobile-card mobile-card-activity" data-card-id="activity">
                    <div class="mobile-card-header">
                        <h5>
                            <i class="bi bi-activity me-2"></i>
                            Recent Activity
                        </h5>
                        <a href="/activity" class="card-action-link">
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                    <div class="mobile-card-body">
                        <MobileActivityFeed Activities="@DashboardData.RecentActivities" MaxItems="3" />
                    </div>
                </div>

                @* Notifications Card *@
                <div class="mobile-card mobile-card-notifications" data-card-id="notifications">
                    <div class="mobile-card-header">
                        <h5>
                            <i class="bi bi-bell me-2"></i>
                            Notifications
                            @if (DashboardData.Notifications.UnreadCount > 0)
                            {
                                <span class="notification-badge">@DashboardData.Notifications.UnreadCount</span>
                            }
                        </h5>
                        <a href="/notifications" class="card-action-link">
                            <i class="bi bi-arrow-right"></i>
                        </a>
                    </div>
                    <div class="mobile-card-body">
                        <MobileNotificationCenter Summary="@DashboardData.Notifications" MaxItems="3" />
                    </div>
                </div>
            </SwipeableCards>

            <!-- Card Indicators -->
            <div class="card-indicators">
                @for (int i = 0; i < 5; i++)
                {
                    <div class="indicator @(i == CurrentCardIndex ? "active" : "")"
                         @onclick="() => NavigateToCard(i)">
                    </div>
                }
            </div>
        </div>

        <!-- Mobile Bottom Actions -->
        <div class="mobile-bottom-actions">
            <button class="bottom-action-btn @(IsRefreshing ? "refreshing" : "")" 
                    @onclick="RefreshDashboard"
                    disabled="@IsRefreshing">
                <i class="bi bi-arrow-clockwise @(IsRefreshing ? "spin" : "")"></i>
                <span>@(IsRefreshing ? "Refreshing..." : "Refresh")</span>
            </button>
        </div>
    }
    else
    {
        <!-- Fallback to regular dashboard for non-mobile -->
        <DashboardLayout 
            DashboardData="@DashboardData"
            CurrentUser="@CurrentUser"
            OnRefresh="@OnRefresh" />
    }
</div>

@code {
    [Parameter] public DashboardViewModel DashboardData { get; set; } = new();
    [Parameter] public User? CurrentUser { get; set; }
    [Parameter] public DeviceInfo? DeviceInfo { get; set; }
    [Parameter] public EventCallback OnRefresh { get; set; }
    [Parameter] public bool IsRealTimeConnected { get; set; } = true;

    private SwipeableCards? swipeableCards;
    private int CurrentCardIndex = 0;
    private bool IsRefreshing = false;

    private async Task RefreshDashboard()
    {
        IsRefreshing = true;
        StateHasChanged();

        try
        {
            await OnRefresh.InvokeAsync();
            await Task.Delay(500); // Show refreshing animation
        }
        finally
        {
            IsRefreshing = false;
            StateHasChanged();
        }
    }

    private void OnCardSwipe(int newIndex)
    {
        CurrentCardIndex = newIndex;
        StateHasChanged();
    }

    private void NavigateToCard(int index)
    {
        CurrentCardIndex = index;
        swipeableCards?.NavigateToCard(index);
    }

    private int GetOverallProgress()
    {
        if (!DashboardData.Applications.Any())
            return 0;
        
        return (int)DashboardData.Applications.Average(a => a.OverallCompletion);
    }

    private int GetDaysUntilDeadline()
    {
        var nextDeadline = DashboardData.UpcomingDeadlines
            .Where(d => d.DueDate > DateTime.UtcNow)
            .OrderBy(d => d.DueDate)
            .FirstOrDefault();
        
        return nextDeadline?.DaysUntilDue ?? 0;
    }

    private int GetPendingCount()
    {
        return DashboardData.Applications.Count(a => 
            a.Status == ApplicationStatus.InProgress || 
            a.Status == ApplicationStatus.AwaitingDocuments ||
            a.Status == ApplicationStatus.RequiresAction) + 
            DashboardData.UpcomingDeadlines.Count;
    }
}

<style>
    .mobile-dashboard-layout {
        min-height: 100vh;
        background-color: #f8f9fa;
        padding: 0;
        overflow-x: hidden;
    }

    .mobile-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem;
        border-radius: 0 0 1rem 1rem;
        margin-bottom: 1rem;
    }

    .mobile-welcome {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .mobile-title {
        font-size: 1.25rem;
        font-weight: 700;
        margin: 0;
        flex-grow: 1;
    }

    .mobile-connection-status {
        flex-shrink: 0;
    }

    .mobile-summary-stats {
        display: flex;
        justify-content: space-around;
        gap: 1rem;
    }

    .summary-stat {
        text-align: center;
        flex: 1;
    }

    .summary-stat .stat-value {
        display: block;
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1;
        margin-bottom: 0.25rem;
    }

    .summary-stat .stat-label {
        display: block;
        font-size: 0.75rem;
        opacity: 0.9;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .mobile-cards-container {
        position: relative;
        margin-bottom: 1rem;
    }

    .mobile-card {
        margin: 0 1rem 1rem 1rem;
        background: white;
        border-radius: 1rem;
        box-shadow: 0 2px 12px rgba(0,0,0,0.08);
        overflow: hidden;
        min-height: 300px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .mobile-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 20px rgba(0,0,0,0.12);
    }

    .mobile-card-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid #e9ecef;
        background-color: #f8f9fa;
    }

    .mobile-card-header h5 {
        margin: 0;
        font-weight: 600;
        color: #495057;
        display: flex;
        align-items: center;
    }

    .card-action-link {
        color: #6c757d;
        text-decoration: none;
        font-size: 1.1rem;
        transition: color 0.15s ease;
    }

    .card-action-link:hover {
        color: #0d6efd;
    }

    .notification-badge {
        background-color: #dc3545;
        color: white;
        font-size: 0.7rem;
        padding: 0.2rem 0.5rem;
        border-radius: 1rem;
        margin-left: 0.5rem;
        font-weight: 600;
    }

    .mobile-card-body {
        padding: 1rem;
        height: calc(100% - 60px);
        overflow-y: auto;
    }

    .card-indicators {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
        margin: 1rem 0;
    }

    .indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #d6d8db;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .indicator.active {
        background-color: #0d6efd;
        transform: scale(1.2);
    }

    .mobile-bottom-actions {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        background: white;
        border-top: 1px solid #e9ecef;
        padding: 1rem;
        display: flex;
        justify-content: center;
        z-index: 1000;
    }

    .bottom-action-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        background: #0d6efd;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 2rem;
        font-weight: 600;
        transition: all 0.15s ease;
        min-height: 44px;
    }

    .bottom-action-btn:hover:not(:disabled) {
        background: #0b5ed7;
        transform: translateY(-1px);
    }

    .bottom-action-btn:disabled {
        opacity: 0.6;
        pointer-events: none;
    }

    .bottom-action-btn.refreshing {
        background: #6c757d;
    }

    .spin {
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    /* Color-coded mobile cards */
    .mobile-card-progress {
        border-left: 4px solid #198754;
    }

    .mobile-card-deadlines {
        border-left: 4px solid #fd7e14;
    }

    .mobile-card-actions {
        border-left: 4px solid #0d6efd;
    }

    .mobile-card-activity {
        border-left: 4px solid #6f42c1;
    }

    .mobile-card-notifications {
        border-left: 4px solid #dc3545;
    }

    /* Responsive adjustments */
    @media (max-width: 480px) {
        .mobile-title {
            font-size: 1.1rem;
        }

        .summary-stat .stat-value {
            font-size: 1.25rem;
        }

        .mobile-card {
            margin: 0 0.75rem 0.75rem 0.75rem;
            min-height: 280px;
        }

        .mobile-card-header,
        .mobile-card-body {
            padding: 0.75rem;
        }
    }

    /* Landscape orientation adjustments */
    @media (orientation: landscape) and (max-height: 500px) {
        .mobile-header {
            padding: 0.75rem 1rem;
        }

        .mobile-summary-stats {
            margin-top: 0.5rem;
        }

        .mobile-card {
            min-height: 250px;
        }
    }
</style>