@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        <div class="d-flex align-items-center">
            <span class="me-3">Welcome, @context.User.Identity?.Name!</span>
            <button class="btn btn-outline-light btn-sm" @onclick="SignOut">
                <span class="bi bi-box-arrow-right me-1"></span> Sign Out
            </button>
        </div>
    </Authorized>
    <NotAuthorized>
        <button class="btn btn-primary" @onclick="SignIn">
            <span class="bi bi-person-check me-1"></span> Sign In
        </button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task SignIn()
    {
        // For now, just redirect to a sign-in page
        // This will be implemented when authentication is set up
        await Task.CompletedTask;
    }

    private async Task SignOut()
    {
        // For now, just a placeholder
        // This will be implemented when authentication is set up
        await Task.CompletedTask;
    }
}