@if (ShowSpinner)
{
    <div class="loading-spinner-container @CssClass">
        <div class="loading-spinner">
            @if (ShowText)
            {
                <div class="spinner-border @SpinnerSize @SpinnerColor" role="status" aria-hidden="true"></div>
                <div class="loading-text ms-3">@LoadingText</div>
            }
            else
            {
                <div class="spinner-border @SpinnerSize @SpinnerColor" role="status">
                    <span class="visually-hidden">@LoadingText</span>
                </div>
            }
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowSpinner { get; set; } = true;
    [Parameter] public string LoadingText { get; set; } = "Loading...";
    [Parameter] public bool ShowText { get; set; } = true;
    [Parameter] public string CssClass { get; set; } = string.Empty;
    [Parameter] public SpinnerSize Size { get; set; } = finaid.Components.Shared.SpinnerSize.Medium;
    [Parameter] public SpinnerColor Color { get; set; } = finaid.Components.Shared.SpinnerColor.Primary;

    private string SpinnerSize => Size switch
    {
        finaid.Components.Shared.SpinnerSize.Small => "spinner-border-sm",
        finaid.Components.Shared.SpinnerSize.Large => "",
        _ => ""
    };

    private string SpinnerColor => Color switch
    {
        finaid.Components.Shared.SpinnerColor.Primary => "text-primary",
        finaid.Components.Shared.SpinnerColor.Secondary => "text-secondary",
        finaid.Components.Shared.SpinnerColor.Success => "text-success",
        finaid.Components.Shared.SpinnerColor.Warning => "text-warning",
        finaid.Components.Shared.SpinnerColor.Danger => "text-danger",
        _ => "text-primary"
    };

}

<style>
    .loading-spinner-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 200px;
        width: 100%;
    }

    .loading-spinner {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .loading-text {
        font-weight: 500;
        color: var(--bs-text-muted);
    }

    .loading-spinner-container.overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0.8);
        z-index: 1050;
    }

    .loading-spinner-container.inline {
        min-height: auto;
        padding: 1rem;
    }
</style>