name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
  push:
    branches:
      - main
    paths:
      - 'Infrastructure/**'

env:
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  validate:
    name: Validate Bicep Templates
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Validate Bicep template
      run: |
        az deployment group validate \
          --resource-group rg-finaid-${{ github.event.inputs.environment || 'dev' }} \
          --template-file Infrastructure/azure-resources.bicep \
          --parameters environmentName=${{ github.event.inputs.environment || 'dev' }}

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || (github.event.inputs.environment == 'dev')
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Create Resource Group
      run: |
        az group create \
          --name rg-finaid-dev \
          --location eastus2 \
          --tags Environment=development Application=finaid CostCenter=FinancialAid
          
    - name: Deploy Infrastructure
      run: |
        az deployment group create \
          --resource-group rg-finaid-dev \
          --template-file Infrastructure/azure-resources.bicep \
          --parameters environmentName=dev \
          --mode Incremental
          
    - name: Configure Key Vault Secrets
      run: |
        # Set placeholder secrets for development environment
        az keyvault secret set --vault-name kv-finaid-dev --name sql-admin-password --value "${{ secrets.DEV_SQL_ADMIN_PASSWORD }}" || echo "Secret already exists"
        az keyvault secret set --vault-name kv-finaid-dev --name sql-connection-string --value "Server=tcp:sql-finaid-dev.database.windows.net,1433;Database=sqldb-finaid-dev;Authentication=Active Directory Default;" || echo "Secret already exists"
        az keyvault secret set --vault-name kv-finaid-dev --name redis-connection-string --value "redis-finaid-dev.redis.cache.windows.net:6380,password=$(az redis list-keys --resource-group rg-finaid-dev --name redis-finaid-dev --query primaryKey -o tsv),ssl=True,abortConnect=False" || echo "Secret already exists"

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, deploy-dev]
    if: github.event.inputs.environment == 'prod'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Azure CLI
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Create Resource Group
      run: |
        az group create \
          --name rg-finaid-prod \
          --location eastus2 \
          --tags Environment=production Application=finaid CostCenter=FinancialAid
          
    - name: Deploy Infrastructure
      run: |
        az deployment group create \
          --resource-group rg-finaid-prod \
          --template-file Infrastructure/azure-resources.bicep \
          --parameters environmentName=prod \
          --mode Incremental
          
    - name: Configure Key Vault Secrets
      run: |
        # Production secrets must be manually configured
        echo "Production Key Vault secrets must be configured manually for security"
        echo "Required secrets:"
        echo "- sql-admin-password"
        echo "- sql-connection-string"
        echo "- redis-connection-string"
        echo "- storage-connection-string"
        echo "- aad-client-id"
        echo "- aad-tenant-id"  
        echo "- aad-client-secret"
        echo "- appinsights-connection-string"
        echo "- openai-endpoint"
        echo "- openai-api-key"
        echo "- federal-api-key"
        echo "- federal-client-id"
        echo "- federal-client-secret"

  cleanup:
    name: Cleanup on Failure
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-prod]
    if: failure()
    
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        
    - name: Rollback on failure
      run: |
        echo "Infrastructure deployment failed. Manual review required."
        echo "Consider running: az group delete --name rg-finaid-${{ github.event.inputs.environment || 'dev' }} --yes"